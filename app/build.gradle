apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'com.google.gms.google-services'

project.ext.ASSET_DIR = projectDir.toString() + '/src/main/assets'

assert file(project.ext.ASSET_DIR + "/graph.lite").exists()
assert file(project.ext.ASSET_DIR + "/labels.txt").exists()

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.bd0631.goldseeker"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    dataBinding {
        enabled = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    aaptOptions {
        noCompress "tflite"
        noCompress "lite"
    }
}

dependencies {
    implementation 'com.google.android.gms:play-services-maps:15.0.1'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    dependencies {
        implementation fileTree(dir: 'libs', include: ['*.jar'])
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
        implementation 'com.android.support:appcompat-v7:28.0.0'
        implementation 'com.android.support.constraint:constraint-layout:1.0.2'
        implementation 'com.android.support:design:28.0.0-alpha3'
        testImplementation 'junit:junit:4.12'
        androidTestImplementation 'com.android.support.test:runner:1.0.1'
        androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

        implementation 'com.google.dagger:dagger:2.16'
        annotationProcessor 'com.google.dagger:dagger-compiler:2.16'

        implementation 'com.google.dagger:dagger-android:2.16'
        implementation 'com.google.dagger:dagger-android-support:2.16'
        // if you use the support libraries
        kapt 'com.google.dagger:dagger-android-processor:2.16'
        kapt "com.google.dagger:dagger-compiler:2.16"

        def room_version = "1.1.0" // or, for latest rc, use "1.1.1-rc1"

        implementation "android.arch.persistence.room:runtime:$room_version"
        kapt "android.arch.persistence.room:compiler:$room_version"

        // optional - RxJava support for Room
        implementation "android.arch.persistence.room:rxjava2:$room_version"

        // Test helpers
        testImplementation "android.arch.persistence.room:testing:$room_version"

        def lifecycle_version = "1.1.1"

        // ViewModel and LiveData
        implementation "android.arch.lifecycle:extensions:$lifecycle_version"

        annotationProcessor "android.arch.lifecycle:compiler:$lifecycle_version"
        // alternately - if using Java8, use the following instead of compiler
        implementation "android.arch.lifecycle:common-java8:$lifecycle_version"

        // optional - ReactiveStreams support for LiveData
        implementation "android.arch.lifecycle:reactivestreams:$lifecycle_version"

        // optional - Test helpers for LiveData
        testImplementation "android.arch.core:core-testing:$lifecycle_version"

        def nav_version = "1.0.0-alpha02"

        implementation "android.arch.navigation:navigation-fragment:$nav_version"
        // use -ktx for Kotlin
        implementation "android.arch.navigation:navigation-ui:$nav_version" // use -ktx for Kotlin

        // optional - Test helpers
        androidTestImplementation "android.arch.navigation:navigation-testing:$nav_version"
        // use -ktx for Kotlin

        def work_version = "1.0.0-alpha02"

        implementation "android.arch.work:work-runtime:$work_version" // use -ktx for Kotlin

        // optional - Firebase JobDispatcher support
        implementation "android.arch.work:work-firebase:$work_version"

        // optional - Test helpers
        androidTestImplementation "android.arch.work:work-testing:$work_version"

        def paging_version = "1.0.0"

        implementation "android.arch.paging:runtime:$paging_version"

        // optional - RxJava support, currently in release candidate
        implementation "android.arch.paging:rxjava2:1.0.0-rc1"

        implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

        implementation 'com.android.support:cardview-v7:28.0.0'

        implementation 'com.airbnb.android:lottie:2.5.5'

        implementation 'com.google.firebase:firebase-core:16.0.1'

        implementation 'com.google.firebase:firebase-firestore:17.1.0'

        //Tensor
        implementation 'org.tensorflow:tensorflow-lite:+'

    }
}
